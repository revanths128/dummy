import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn import preprocessing
from sklearn.naive_bayes import MultinomialNB



clf = MultinomialNB()
le=preprocessing.LabelEncoder()
data = pd.read_csv("Dataset.csv")
print(data)




df=np.array(data.iloc[:,:-1])
m,n = df.shape



for i in range(m):
    if df[i][1] == 'F':
        df[i][1] = 0
    else:
        df[i][1] = 1
df




d = {'HIGH': 2, 'NORMAL': 1, 'LOW': 0}
for i in range(m):
    df[i][2] = d[df[i][2]]
    df[i][3] = d[df[i][3]]
df




x = df
y = np.array(data.iloc[:,-1])
uniq = np.unique(y)
le.fit(uniq)
y = le.transform(y)
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
y




clf.fit(x_train,y_train)




y_pred = clf.predict(x_test)
print("Accuacy:",np.sum(y_pred == y_test) / len(y_test))

